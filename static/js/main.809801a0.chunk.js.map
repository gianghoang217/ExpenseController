{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","expenseTitle","title","setTitle","expenseAmount","onClick","ExpensesList","items","length","map","expense","expenseDate","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","data","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","fileredYear","setFilteredYear","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","prevState","min","step","onStopEditing","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","App","DUMMY_EXPENSES","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.809801a0.chunk.js","sourcesContent":["import \"./Card.css\"\n\nfunction Card(props) {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\nexport default Card","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const filterChangeHandler = (event) => {\n    props.onFilterChange(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={filterChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\"\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const date = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{date}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate\n","import React, { useState } from \"react\";\nimport \"./ExpenseItem.css\";\nimport \"./ExpenseDate\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nfunction ExpenseItem(props) {\n\n  const [title, setTitle] = useState(props.expenseTitle);\n  const clickHandler = () => {\n      setTitle('Updated')\n  }\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.expenseAmount}</div>\n      </div>\n      <button onClick={clickHandler}>Change title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nconst ExpensesList = props => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n  \n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map(expense => (\n        <ExpenseItem\n          key={expense.id}\n          date={expense.expenseDate}\n          expenseTitle={expense.expenseTitle}\n          expenseAmount={expense.expenseAmount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = props => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n      </div>\n    </div>\n  );\n};\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { data } from \"browserslist\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map(dataPoint => (\n        <ChartBar\n          key={data.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 }\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.expenseDate.getMonth();\n    chartDataPoints[expenseMonth].value += expense.expenseAmount; \n  }\n  return <Chart dataPoints = {chartDataPoints}/>;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [fileredYear, setFilteredYear] = useState(\"2020\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpense = props.expenses.filter(expense => {\n    return expense.expenseDate.getFullYear().toString() === fileredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={fileredYear}\n          onFilterChange={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpense} />\n        <ExpensesList items={filteredExpense} />;\n      </Card>\n    </div>\n  );\n}\n\nExpenses.propTypes = {\n  expenses: PropTypes.array\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = props => {\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  });\n\n  const titleChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState, enteredTitle: event.target.value };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState, enteredAmount: event.target.value };\n    });\n  };\n\n  const dateChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState, enteredDate: event.target.value };\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      expenseDate: new Date(userInput.enteredDate),\n      expenseTitle: userInput.enteredTitle,\n      expenseAmount: +userInput.enteredAmount\n    };\n    props.onSaveExpenseData(expenseData);\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\"\n    });\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={userInput.enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={userInput.enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            step=\"2022-12-31\"\n            value={userInput.enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onStopEditing}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false)\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onStopEditing={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\"\nimport React, {useState} from \"react\"\n\nfunction App() {\n  const DUMMY_EXPENSES = [\n    {\n      id: 1,\n      expenseDate: new Date(2020, 0, 28),\n      expenseTitle: \"Motorbike\",\n      expenseAmount: 222\n    },\n    {\n      id: 2,\n      expenseDate: new Date(2021, 2, 24),\n      expenseTitle: \"Book\",\n      expenseAmount: 555\n    },\n    {\n      id: 3,\n      expenseDate: new Date(2021, 7, 17),\n      expenseTitle: \"tank\",\n      expenseAmount: 300\n    },\n    {\n      id: 4,\n      expenseDate: new Date(2022, 2, 27),\n      expenseTitle: \"Bike\",\n      expenseAmount: 777\n    },\n    {\n      id: 5,\n      expenseDate: new Date(2019, 1, 16),\n      expenseTitle: \"Plant\",\n      expenseAmount: 888\n    },\n    {\n      id: 6,\n      expenseDate: new Date(2021, 12, 7),\n      expenseTitle: \"Roses\",\n      expenseAmount: 555\n    }\n  ];\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses = {expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}